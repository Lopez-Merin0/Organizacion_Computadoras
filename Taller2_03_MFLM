;Direccionamiento inmediato

section .data
resultado dd 0         ; Define una variable de 32 bits (4 bytes) llamada "resultado" y la inicializa con 0

section .text
global _start          ; Define la etiqueta global _start, que es el punto de entrada del programa
_start:
    mov eax, 5         ; Mueve el valor inmediato 5 al registro eax
    add eax, 7         ; Suma el valor inmediato 7 al valor actual de eax
    mov [resultado], eax ; Guarda el valor de eax en la variable "resultado"
    
    mov eax, 1         ; Código de la llamada al sistema para salir (sys_exit)
    xor ebx, ebx       ; Limpia el registro ebx, poniéndolo a 0 (esto será el código de retorno)
    int 0x80           ; Interrupción de software para llamar al kernel y ejecutar la llamada al sistema
